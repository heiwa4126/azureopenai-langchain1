envfile = ".env"

[tasks]
ex0 = "uv run src/azureopenai_langchain1/ex0.py"
ex1 = "uv run src/azureopenai_langchain1/ex1.py"
ex2 = "uv run src/azureopenai_langchain1/ex2.py"
ex2b = "uv run src/azureopenai_langchain1/ex2b.py"
ex2s = "uv run src/azureopenai_langchain1/ex2s.py"
ex2t = "uv run src/azureopenai_langchain1/ex2t.py"
ex2js = "uv run src/azureopenai_langchain1/ex2js.py"
ex2z = "uv run src/azureopenai_langchain1/ex2z.py"
ex2zs = "uv run src/azureopenai_langchain1/ex2zs.py"

agent1 = "uv run src/azureopenai_langchain1/agent1.py"
agent1e = "uv run src/azureopenai_langchain1/agent1e.py"

# ======== utils
format.shell = """
ruff format &&
# biome format --write . &&
dprint fmt --config ~/dprint.json &&
textlint --fix "**/*.md"
"""

update.shell = "uv lock -U && uv sync && uv cache prune"
check = "ruff check src/"
mypy = "uv run mypy src/"

uvsync = "uv sync"
requirements = "uv pip compile pyproject.toml --no-deps -o requirements.txt"
sync = ["uvsync", "requirements"]

trivy-config = "trivy config ."
trivy-fs = "trivy fs ."
trivy-check = ["trivy-config", "trivy-fs"]
trivy-license = "trivy fs --scanners license --severity HIGH,CRITICAL ."
trivy-sbom = "trivy fs --scanners vuln --format cyclonedx --output sbom.cdx.json ."
trivy-sbom-spdx = "trivy fs --scanners vuln --format spdx-json --output sbom.spdx.json ."
sbom = ["requirements", "trivy-sbom", "trivy-sbom-spdx"]
